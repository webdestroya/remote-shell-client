
name: Release
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch that will be built"
        required: true
      version:
        description: "The version to release (must be prefixed with 'v')"
        required: true

env:
  VERSION: ${{ github.event.inputs.version }}
  GH_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}

jobs:
  goreleaser:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Unshallow
        run: git fetch

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      # - name: Hook private repo
      #   run: git config --global url."https://${{ secrets.GORELEASER_GITHUB_TOKEN }}:x-oauth-basic@github.com".insteadOf "https://github.com"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --snapshot --rm-dist --skip-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move build artifacts
        run: |
          mkdir ~/artifacts
          mv $GITHUB_WORKSPACE/dist/remote-shell_linux_amd64.tar.gz ~/artifacts/linux.tar.gz
          mv $GITHUB_WORKSPACE/dist/remote-shell_darwin_amd64.zip ~/artifacts/darwin.zip
          
      - name: List Build Artifacts
        run: ls -l ~/artifacts

      - name: Save Linux Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact-linux
          path: ~/artifacts/linux.tar.gz
          if-no-files-found: error

      - name: Save MacOS Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact-darwin
          path: ~/artifacts/darwin.zip
          if-no-files-found: error
  
  create_release_tag:
    name: Tag Release
    needs: [goreleaser]
    runs-on: ubuntu-latest
    steps:

      - name: Trim asset version prefix and Validate
        run: |-
          echo $VERSION
          trim=${VERSION#"v"}
          echo $trim
          if [[ $trim =~  ^[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]]; then
            echo "Version OK: $trim"
          else
            echo "Invalid version: $trim"
            exit 1
          fi
          echo "VERSION=${trim}" >> $GITHUB_ENV
          
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Tag Release
        run: |
          git config user.name "Cloud87 GitHub Actions Bot"
          git config user.email noreply@github.com
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}
    
  ensure_branch_in_homebrew:
    name: Ensure branch exists in homebrew-tap
    needs: [create_release_tag]
    runs-on: ubuntu-latest
    steps:
      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.event.inputs.version }}

      - name: Checkout
        if: steps.semver_parser.outputs.prerelease == ''
        uses: actions/checkout@v3
        with:
          repository: webdestroya/homebrew-tap
          token: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
          ref: main

      - name: Delete base branch if exists
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          git fetch --all
          git push origin --delete bump-brew
          git push origin --delete $VERSION
        continue-on-error: true

      - name: Create base branch
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          git checkout -b bump-brew
          git push --set-upstream origin bump-brew
    
  create_release:
    name: Release
    needs: [create_release_tag, ensure_branch_in_homebrew]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
    

  create_pr_in_homebrew:
    name: Create PR in homebrew-tap
    needs: [ensure_branch_in_homebrew, create_release]
    runs-on: ubuntu-latest
    env:
      Version: ${{ github.event.inputs.version }}
    steps:
      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.event.inputs.version }}

      - name: Checkout
        if: steps.semver_parser.outputs.prerelease == ''
        uses: actions/checkout@v3
        with:
          repository: webdestroya/homebrew-tap
          token: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
          ref: main

      - name: Create a new branch off the base branch
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          git fetch --all
          git checkout bump-brew
          git checkout -b rshell/$VERSION
          git push --set-upstream origin rshell/$VERSION

      - name: Close pull request if already exists
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          gh pr close rshell/$VERSION
        continue-on-error: true

      - name: Create pull request
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          gh pr create --base main --head rshell/$VERSION --title "[RShell] $Version" --body "Update formula"